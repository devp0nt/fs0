name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: write # <-- allows pushing tags/commits
  issues: write # <-- needed for GitHub release notes
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest
    if: >
      !contains(github.event.head_commit.message, '[skip ci]')
    strategy:
      matrix:
        node-version: [18, 20, 22, 24]
        bun-version: [1.0.0, latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup Bun ${{ matrix.bun-version }}
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ matrix.bun-version }}

      - name: Install dependencies
        run: bun install

      - name: Type check
        run: bun run types

      - name: Run tests
        run: bun test

      - name: Build
        run: bun run build

      - name: Test build output
        run: bun run test:build

  release:
    needs: test
    runs-on: ubuntu-latest
    if: >
      github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, '[skip ci]')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # semantic-release requires full history

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release
